name: "Publish release"

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'package.json'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get version
        id: get-version
        shell: pwsh
        run: |
          $json = Get-Content package.json | ConvertFrom-Json
          echo "::set-output name=version::$(echo $json.version)"
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.4.1
        with:
          version: latest
      - name: Install dependencies
        run: pnpm install
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 18.x
          cache: "pnpm"
      - name: Build the Chrome extension
        run: pnpm build --zip --target=chrome-mv3
      - name: Build the Firefox extension
        run: pnpm build --zip --target=firefox-mv3
      - name: Build the Edge extension
        run: pnpm build --zip --target=edge-mv3
      - name: Build the Opera extension
        run: pnpm build --zip --target=opera-mv3
      - name: Rename extension files
        run: | 
          mv build/chrome-mv3-prod.zip build/${{ steps.get-version.outputs.version }}_chrome-mv3.zip
          mv build/firefox-mv3-prod.zip build/${{ steps.get-version.outputs.version }}_firefox-mv3.zip
          mv build/edge-mv3-prod.zip build/${{ steps.get-version.outputs.version }}_edge-mv3.zip
          mv build/opera-mv3-prod.zip build/${{ steps.get-version.outputs.version }}_opera-mv3.zip
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          files: build/*.zip
      - name: Browser Platform Publish
        uses: PlasmoHQ/bpp@v3.6.1
        with:
          keys: ${{ secrets.SUBMIT_KEYS }}
          chrome-file: build/${{ steps.get-version.outputs.version }}_chrome-mv3.zip
          firefox-file: build/${{ steps.get-version.outputs.version }}_firefox-mv3.zip
          edge-file: build/${{ steps.get-version.outputs.version }}_edge-mv3.zip
          opera-file: build/${{ steps.get-version.outputs.version }}_opera-mv3.zip
          verbose: true
